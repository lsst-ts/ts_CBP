.. _Developer_Guide:

#########################################
CBP Developer Guide
#########################################

The CBP software consists of a typical salobj CSC, a firmware written in DMC and a TCP/IP socket controller written in python.

.. glossary::

    DMC
        A language based on C for writing galil motion control firmware logic.


.. _Dependencies:

Dependencies
============

[This section should list dependencies in bullet form]

* `SAL <https://ts-sal.lsst.io>`_ - v4.0.0
* `ts_salobj <https://ts-salobj.lsst.io>`_ - v5.x.0

.. Linking to the previous versions may also be worthwhile, depending on the CSC

.. _API:

CBP API
=============================

The content in this section is autogenerated from docstrings.

.. The code below should insert the docstrings from the code.

.. automodapi:: lsst.ts.cbp
    :no-main-docstr:
    :no-inheritance-diagram:

.. _Build:

Build and Test
==============

.. prompt:: bash

    pip install -e .[dev]
    pytest --cov lsst.ts.cbp -ra


.. _Usage:

Usage
=====

Starting the CSC.

.. code::

    python runCBPCsc.py

Stopping the CSC.

.. code::

    await cbp.cmd_exitControl.set_start(timeout=10)

.. _Simulator:

Simulator
=========
Assuming inside of ``develop-env`` container.

.. prompt:: bash

    pip install -e .[dev]
    pip install -U scanf
    export TS_CONFIG_MTCALSYS_DIR=/home/saluser/develop/mtcalsys

Starting the simulator

.. prompt:: bash

    lewis -k lsst.ts.cbp simulator
    
:kbd:`ctrl+c` to exit the simulator.

This simulator does not park properly.
Limits have not been added, but the component code checks the limits anyway.


.. _Firmware:

Updating Firmware of the CBP
==================================================

.. note:: Fill out with correct info.


.. _Documentation:

Building the Documentation
==========================

.. prompt:: bash

    pip install -e .[dev]
    package-docs clean && package-docs build
    google-chrome doc/_build/html/index.html


.. _Contributing:

Contributing
============

Code and documentation contributions utilize pull-requests on GitHub.
Feature requests can be made by filing a Jira ticket with the ``ts_CBP`` label in the Data Management(DM) project.
In all cases, reaching out to the :ref:`contacts for this CSC <ts_xml:index:master-csc-table:CBP>` is recommended.

